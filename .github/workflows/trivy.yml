name: Trivy Scan

on:
  push:
    branches:
      - main

jobs:
  prepare-matrix:
    if: ${{ false }}
    runs-on: ubuntu-latest
    outputs:
      image-matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Parse image list and set output
        id: parse-images
        run: |
          images=$(jq -c 'to_entries[] | {image: (.key + ":" + .value)}' wis2box-images.json | jq -s .)
          echo "$images"
          echo "::set-output name=images::$images"

      - name: Validate JSON format
        run: |
          echo "$images" | jq empty

  trivy-scan:
    if: ${{ false }}
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.prepare-matrix.outputs.images) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Trivy vulnerability scanner on ${{ matrix.image.image }}
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ matrix.image.image }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db:1